---
openapi: 3.0.0
info:
  description: REST-style API for document database storing all kinds of documents
    and their metadata.
  version: 0.1.0
  title: Files
  contact:
    email: me@me
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      properties:
        result:
          description: Error message
          type: string
          example: some error occured
    Result:
      properties:
        result:
          type: string
          example: success
    DocumentInfo:
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          example: 00f40d12-b1de-4c2b-8ce9-2bed59b31118
        created:
          readOnly: true
          type: string
          format: date-time 
          example: '2020-11-04T09:41:27.412Z'
        updated:
          readOnly: true
          type: string
          format: date-time 
          example: '2020-12-05T09:41:27.412Z'
        closed:
          readOnly: true
          type: string
          format: date-time 
          example: '2020-12-05T09:41:27.412Z'
        filename:
          type: string
          example: document.pdf
        category:
          type: string
          example: agreement
        metadata:
          type: string
          example: '{"author":"Pulkkinen","status":"draft"}'
        filesize:
          readOnly: true
          type: integer
          mimimum: 0
          format: int64
          example: '123456'
        mimetype:
          type: string
          example: application/pdf
    Document:
      allOf:
      - $ref: '#/components/schemas/DocumentInfo'
      - type: object
        properties:
          filedata:
            type: string
            format: byte
            description: base64 encoded characters
            example: ZmlsZXM=
paths:
  "/api/files":
    get:
      description: Returns list of most recent documents up to fixed or provided limit.
      parameters:
      - name: limit
        in: query
        required: false
        description: max number of documents to return
        schema:
          type: integer
          format: int64
          minimum: 1
          maximum: 1000
      responses:
        '200':
          description: A JSON array of documents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref : '#/components/schemas/DocumentInfo'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized access
    post:
      description: Create new document with metadata .
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filename:
                  type: string
                  example: somefile.txt
                filedata:
                  type: string
                  format: byte
                  example: ZmlsZXM=
                mimetype:
                  type: string
                  example: text/plain
                category:
                  type: string
                  example: offer
                metadata:
                  type: string
                  example: '{"author":"Pulkkinen","status":"draft"}'
              required:
              - filename
              - filedata
              - mimetype
      responses:
        '200':
          description: Document id
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 00f40d12-b1de-4c2b-8ce9-2bed59b31118
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized access
  "/api/files/{id}":
    put:
      description: Update existing document.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filename:
                  type: string
                  example: somefile.txt
                filedata:
                  type: string
                  format: byte
                  example: ZmlsZXM=
                mimetype:
                  type: string
                  example: text/plain
                category:
                  type: string
                  example: contract
                metadata:
                  type: string
                  example: '{"author":"Pulkkinen","status":"draft"}'
              required:
              - filename
              - mimetype
              - filedata
      parameters:
      - name: id
        in: path
        required: true
        description: Document id
        schema:
          type: string
          format: uuid
          example: 00f40d12-b1de-4c2b-8ce9-2bed59b31118
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized access
    delete:
      description: Close document by id.
      parameters:
      - name: id
        in: path
        required: true
        description: Document id
        schema:
          type: string
          format: uuid
          example: 00f40d12-b1de-4c2b-8ce9-2bed59b31118
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized access
    get:
      description: Returns single document by id.
      parameters:
      - name: id
        in: path
        required: true
        description: Document id
        schema:
          type: string
          format: uuid
          example: 00f40d12-b1de-4c2b-8ce9-2bed59b31118
      responses:
        '200':
          description: Return document
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized access
